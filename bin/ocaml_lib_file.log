[Function:(path : String) -> String]
	[Arg:String] [Local path(296243):String]
	[Block:Dynamic]
		[Var input(296244):Unknown<0>]
			[Call:Dynamic]
				[Field:(a0 : String) -> Dynamic]
					[TypeExpr OCamlStd:Class<OCamlStd>]
					[FStatic:(a0 : String) -> Dynamic]
						OCamlStd
						open_in:(a0 : String) -> Dynamic
				[Local path(296243):String:String]
		[Var line(296245):String] [Const:String] ""
		[While:Void]
			[Const:Bool] true
			[Block:Void]
				[Try:Void]
					[Block:String]
						[Binop:String]
							[Local line(296245):String:String]
							+=
							[Binop:String]
								[Call:String]
									[Field:(a0 : Dynamic) -> String]
										[TypeExpr OCamlStd:Class<OCamlStd>]
										[FStatic:(a0 : Dynamic) -> String]
											OCamlStd
											input_line:(a0 : Dynamic) -> String
									[Local input(296244):Unknown<0>:Unknown<2>]
								+
								[Const:String] "\n"
					Catch [Local e(296246):haxe.Exception]
						[Block:Dynamic]
							[Call:Void]
								[Field:(a0 : Dynamic) -> Void]
									[TypeExpr OCamlStd:Class<OCamlStd>]
									[FStatic:(a0 : Dynamic) -> Void]
										OCamlStd
										close_in:(a0 : Dynamic) -> Void
								[Local input(296244):Unknown<0>:Unknown<1>]
							[Return:Dynamic] [Local line(296245):String:String]
		[Return:Dynamic] [Local line(296245):String:String][Function:(chars : Array<Int>) -> haxe.io.Bytes]
	[Arg:Array<Int>] [Local chars(296247):Array<Int>]
	[Block:Dynamic]
		[Var index(296248):Int] [Const:Int] 0
		[Var b(296249):haxe.io.Bytes]
			[Call:haxe.io.Bytes]
				[Field:(a0 : Int) -> haxe.io.Bytes]
					[TypeExpr OCamlBytes:Class<OCamlBytes>]
					[FStatic:(a0 : Int) -> haxe.io.Bytes]
						OCamlBytes
						create:(a0 : Int) -> haxe.io.Bytes
				[Field:Int]
					[Local chars(296247):Array<Int>:Array<Int>]
					[FInstance:Int]
						Array<Int>
						length:Int
		[Block:Void]
			[Var `(296251):Int] [Const:Int] 0
			[While:Void]
				[Binop:Bool]
					[Local `(296251):Int:Int]
					<
					[Field:Int]
						[Local chars(296247):Array<Int>:Array<Int>]
						[FInstance:Int]
							Array<Int>
							length:Int
				[Block:Void]
					[Var char(296250):Int]
						[Array:Int]
							[Local chars(296247):Array<Int>:Array<Int>]
							[Local `(296251):Int:Int]
					[Unop:Int]
						++
						Prefix
						[Local `(296251):Int:Int]
					[Call:Void]
						[Field:(a0 : haxe.io.Bytes, a1 : Int, a2 : OCamlChar) -> Void]
							[TypeExpr OCamlBytes:Class<OCamlBytes>]
							[FStatic:(a0 : haxe.io.Bytes, a1 : Int, a2 : OCamlChar) -> Void]
								OCamlBytes
								set:(a0 : haxe.io.Bytes, a1 : Int, a2 : OCamlChar) -> Void
						[Local b(296249):haxe.io.Bytes:haxe.io.Bytes]
						[Local index(296248):Int:Int]
						[Call:OCamlChar]
							[Field:(a0 : Int) -> OCamlChar]
								[TypeExpr OCamlCharTools:Class<OCamlCharTools>]
								[FStatic:(a0 : Int) -> OCamlChar]
									OCamlCharTools
									chr:(a0 : Int) -> OCamlChar
							[Local char(296250):Int:Int]
					[Unop:Int]
						++
						Postfix
						[Local index(296248):Int:Int]
		[Return:Dynamic] [Local b(296249):haxe.io.Bytes:haxe.io.Bytes][Function:(path : String) -> haxe.io.Bytes]
	[Arg:String] [Local path(296252):String]
	[Block:Dynamic]
		[Var input(296253):Unknown<0>]
			[Call:Dynamic]
				[Field:(a0 : String) -> Dynamic]
					[TypeExpr OCamlStd:Class<OCamlStd>]
					[FStatic:(a0 : String) -> Dynamic]
						OCamlStd
						open_in:(a0 : String) -> Dynamic
				[Local path(296252):String:String]
		[Var chars(296254):Array<Int>] [ArrayDecl:Array<Int>]
		[While:Void]
			[Const:Bool] true
			[Block:Void]
				[Try:Void]
					[Block:Int]
						[Var readChar(296255):Int]
							[Call:Int]
								[Field:(a0 : Dynamic) -> Int]
									[TypeExpr OCamlStd:Class<OCamlStd>]
									[FStatic:(a0 : Dynamic) -> Int]
										OCamlStd
										input_byte:(a0 : Dynamic) -> Int
								[Local input(296253):Unknown<0>:Unknown<2>]
						[Call:Int]
							[Field:(x : Int) -> Int]
								[Local chars(296254):Array<Int>:Array<Int>]
								[FInstance:(x : Int) -> Int]
									Array<Int>
									push:(x : Array.T) -> Int
							[Local readChar(296255):Int:Int]
					Catch [Local e(296256):haxe.Exception]
						[Block:Dynamic]
							[Call:Void]
								[Field:(a0 : Dynamic) -> Void]
									[TypeExpr OCamlStd:Class<OCamlStd>]
									[FStatic:(a0 : Dynamic) -> Void]
										OCamlStd
										close_in:(a0 : Dynamic) -> Void
								[Local input(296253):Unknown<0>:Unknown<1>]
							[Return:Dynamic]
								[Call:haxe.io.Bytes]
									[Field:(chars : Array<Int>) -> haxe.io.Bytes]
										[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
										[FStatic:(chars : Array<Int>) -> haxe.io.Bytes]
											ocaml.lib.File
											toBytes:(chars : Array<Int>) -> haxe.io.Bytes
									[Local chars(296254):Array<Int>:Array<Int>]
		[Return:Dynamic]
			[Call:haxe.io.Bytes]
				[Field:(chars : Array<Int>) -> haxe.io.Bytes]
					[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
					[FStatic:(chars : Array<Int>) -> haxe.io.Bytes]
						ocaml.lib.File
						toBytes:(chars : Array<Int>) -> haxe.io.Bytes
				[Local chars(296254):Array<Int>:Array<Int>][Function:(path : String, bytes : haxe.io.Bytes) -> Void]
	[Arg:String] [Local path(296257):String]
	[Arg:haxe.io.Bytes] [Local bytes(296258):haxe.io.Bytes]
	[Block:Void]
		[Var out(296259):Unknown<0>]
			[Call:Dynamic]
				[Field:(a0 : String) -> Dynamic]
					[TypeExpr OCamlStd:Class<OCamlStd>]
					[FStatic:(a0 : String) -> Dynamic]
						OCamlStd
						open_out:(a0 : String) -> Dynamic
				[Local path(296257):String:String]
		[Call:Void]
			[Field:(a0 : Dynamic, a1 : haxe.io.Bytes) -> Void]
				[TypeExpr OCamlStd:Class<OCamlStd>]
				[FStatic:(a0 : Dynamic, a1 : haxe.io.Bytes) -> Void]
					OCamlStd
					output_bytes:(a0 : Dynamic, a1 : haxe.io.Bytes) -> Void
			[Local out(296259):Unknown<0>:Unknown<1>]
			[Local bytes(296258):haxe.io.Bytes:haxe.io.Bytes]
		[Call:Void]
			[Field:(a0 : Dynamic) -> Void]
				[TypeExpr OCamlStd:Class<OCamlStd>]
				[FStatic:(a0 : Dynamic) -> Void]
					OCamlStd
					close_out:(a0 : Dynamic) -> Void
			[Local out(296259):Unknown<0>:Unknown<2>][Function:(srcPath : String, dstPath : String) -> Void]
	[Arg:String] [Local srcPath(296260):String]
	[Arg:String] [Local dstPath(296261):String]
	[Block:Void]
		[Var bytes(296262):haxe.io.Bytes]
			[Call:haxe.io.Bytes]
				[Field:(path : String) -> haxe.io.Bytes]
					[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
					[FStatic:(path : String) -> haxe.io.Bytes]
						ocaml.lib.File
						getBytes:(path : String) -> haxe.io.Bytes
				[Local srcPath(296260):String:String]
		[Call:Void]
			[Field:(path : String, bytes : haxe.io.Bytes) -> Void]
				[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
				[FStatic:(path : String, bytes : haxe.io.Bytes) -> Void]
					ocaml.lib.File
					saveBytes:(path : String, bytes : haxe.io.Bytes) -> Void
			[Local dstPath(296261):String:String]
			[Local bytes(296262):haxe.io.Bytes:haxe.io.Bytes]