[Function:(path : String) -> Buffer_T]
	[Arg:String] [Local path(1031549):String]
	[Block:Dynamic]
		[Var input(1031550):Unknown<0>]
			[Call:Dynamic]
				[Field:(a0 : String) -> Dynamic]
					[TypeExpr OCamlStd:Class<OCamlStd>]
					[FStatic:(a0 : String) -> Dynamic]
						OCamlStd
						open_in:(a0 : String) -> Dynamic
				[Local path(1031549):String:String]
		[Var len(1031551):Int]
			[Call:Int]
				[Field:(a0 : Dynamic) -> Int]
					[TypeExpr OCamlStd:Class<OCamlStd>]
					[FStatic:(a0 : Dynamic) -> Int]
						OCamlStd
						in_channel_length:(a0 : Dynamic) -> Int
				[Local input(1031550):Unknown<0>:Unknown<1>]
		[Var buffer(1031552):Buffer_T]
			[Call:Buffer_T]
				[Field:(a0 : Int) -> Buffer_T]
					[TypeExpr OCamlBuffer:Class<OCamlBuffer>]
					[FStatic:(a0 : Int) -> Buffer_T]
						OCamlBuffer
						create:(a0 : Int) -> Buffer_T
				[Local len(1031551):Int:Int]
		[Call:Void]
			[Field:(a0 : Buffer_T, a1 : Dynamic, a2 : Int) -> Void]
				[TypeExpr OCamlBuffer:{ Statics OCamlBuffer }]
				[FStatic:(a0 : Buffer_T, a1 : Dynamic, a2 : Int) -> Void]
					OCamlBuffer
					add_channel:(a0 : Buffer_T, a1 : Dynamic, a2 : Int) -> Void
			[Local buffer(1031552):Buffer_T:Buffer_T]
			[Local input(1031550):Unknown<0>:Unknown<2>]
			[Local len(1031551):Int:Int]
		[Return:Dynamic] [Local buffer(1031552):Buffer_T:Buffer_T][Function:(path : String) -> haxe.io.Bytes]
	[Arg:String] [Local path(1031553):String]
	[Block:Dynamic]
		[Return:Dynamic]
			[Call:haxe.io.Bytes]
				[Field:(a0 : Buffer_T) -> haxe.io.Bytes]
					[TypeExpr OCamlBuffer:{ Statics OCamlBuffer }]
					[FStatic:(a0 : Buffer_T) -> haxe.io.Bytes]
						OCamlBuffer
						to_bytes:(a0 : Buffer_T) -> haxe.io.Bytes
				[Call:Buffer_T]
					[Field:(path : String) -> Buffer_T]
						[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
						[FStatic:(path : String) -> Buffer_T]
							ocaml.lib.File
							getBuffer:(path : String) -> Buffer_T
					[Local path(1031553):String:String][Function:(path : String) -> String]
	[Arg:String] [Local path(1031554):String]
	[Block:Dynamic]
		[Var data(1031555):String]
			[Call:String]
				[Field:(a0 : Dynamic) -> String]
					[TypeExpr OCamlString:Class<OCamlString>]
					[FStatic:(a0 : Dynamic) -> String]
						OCamlString
						of_seq:(a0 : Dynamic) -> String
				[Call:Dynamic]
					[Field:(a0 : Buffer_T) -> Dynamic]
						[TypeExpr OCamlBuffer:Class<OCamlBuffer>]
						[FStatic:(a0 : Buffer_T) -> Dynamic]
							OCamlBuffer
							to_seq:(a0 : Buffer_T) -> Dynamic
					[Call:Buffer_T]
						[Field:(path : String) -> Buffer_T]
							[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
							[FStatic:(path : String) -> Buffer_T]
								ocaml.lib.File
								getBuffer:(path : String) -> Buffer_T
						[Local path(1031554):String:String]
		[Return:Dynamic] [Local data(1031555):String:String][Function:(path : String, bytes : haxe.io.Bytes) -> Void]
	[Arg:String] [Local path(1031556):String]
	[Arg:haxe.io.Bytes] [Local bytes(1031557):haxe.io.Bytes]
	[Block:Void]
		[Var out(1031558):Unknown<0>]
			[Call:Dynamic]
				[Field:(a0 : String) -> Dynamic]
					[TypeExpr OCamlStd:Class<OCamlStd>]
					[FStatic:(a0 : String) -> Dynamic]
						OCamlStd
						open_out:(a0 : String) -> Dynamic
				[Local path(1031556):String:String]
		[Call:Void]
			[Field:(a0 : Dynamic, a1 : haxe.io.Bytes) -> Void]
				[TypeExpr OCamlStd:Class<OCamlStd>]
				[FStatic:(a0 : Dynamic, a1 : haxe.io.Bytes) -> Void]
					OCamlStd
					output_bytes:(a0 : Dynamic, a1 : haxe.io.Bytes) -> Void
			[Local out(1031558):Unknown<0>:Unknown<1>]
			[Local bytes(1031557):haxe.io.Bytes:haxe.io.Bytes]
		[Call:Void]
			[Field:(a0 : Dynamic) -> Void]
				[TypeExpr OCamlStd:Class<OCamlStd>]
				[FStatic:(a0 : Dynamic) -> Void]
					OCamlStd
					close_out:(a0 : Dynamic) -> Void
			[Local out(1031558):Unknown<0>:Unknown<2>][Function:(srcPath : String, dstPath : String) -> Void]
	[Arg:String] [Local srcPath(1031559):String]
	[Arg:String] [Local dstPath(1031560):String]
	[Block:Void]
		[Var bytes(1031561):haxe.io.Bytes]
			[Call:haxe.io.Bytes]
				[Field:(path : String) -> haxe.io.Bytes]
					[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
					[FStatic:(path : String) -> haxe.io.Bytes]
						ocaml.lib.File
						getBytes:(path : String) -> haxe.io.Bytes
				[Local srcPath(1031559):String:String]
		[Call:Void]
			[Field:(path : String, bytes : haxe.io.Bytes) -> Void]
				[TypeExpr ocaml.lib.File:Class<ocaml.lib.File>]
				[FStatic:(path : String, bytes : haxe.io.Bytes) -> Void]
					ocaml.lib.File
					saveBytes:(path : String, bytes : haxe.io.Bytes) -> Void
			[Local dstPath(1031560):String:String]
			[Local bytes(1031561):haxe.io.Bytes:haxe.io.Bytes]