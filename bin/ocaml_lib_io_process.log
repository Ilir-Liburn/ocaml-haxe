[Function:(cmd : String) -> Void]
	[Arg:String] [Local cmd(1559717):String]
	[Block:ocaml.Stdlib_In_channel]
		[Binop:ocaml.Stdlib_In_channel]
			[Field:ocaml.Stdlib_In_channel]
				[Const:ocaml.lib.io.Process] this
				[FInstance:ocaml.Stdlib_In_channel]
					ocaml.lib.io.Process
					stdin:ocaml.Stdlib_In_channel
			=
			[Call:Dynamic]
				[Field:(a0 : String) -> Dynamic]
					[TypeExpr ocaml.Unix:Class<ocaml.Unix>]
					[FStatic:(a0 : String) -> Dynamic]
						ocaml.Unix
						open_process_in:(a0 : String) -> Dynamic
				[Local cmd(1559717):String:String][Function:(msg : String) -> String]
	[Arg:String] [Local msg(1559718):String]
	[Block:Dynamic]
		[Var lines(1559719):String] [Const:String] ""
		[While:Void]
			[Parenthesis:Bool] [Const:Bool] true
			[Try:Void]
				[Block:String]
					[Binop:String]
						[Local lines(1559719):String:String]
						+=
						[Binop:String]
							[Call:String]
								[Field:(a0 : ocaml.Stdlib_In_channel) -> String]
									[TypeExpr ocaml.Stdlib:Class<ocaml.Stdlib>]
									[FStatic:(a0 : ocaml.Stdlib_In_channel) -> String]
										ocaml.Stdlib
										input_line:(a0 : ocaml.Stdlib_In_channel) -> String
								[Field:ocaml.Stdlib_In_channel]
									[Const:ocaml.lib.io.Process] this
									[FInstance:ocaml.Stdlib_In_channel]
										ocaml.lib.io.Process
										stdin:ocaml.Stdlib_In_channel
							+
							[Const:String] "\n"
				Catch [Local e(1559720):haxe.Exception]
					[Block:Dynamic]
						[Return:Dynamic]
							[Binop:String]
								[Local msg(1559718):String:String]
								+
								[Local lines(1559719):String:String]
		[Return:Dynamic]
			[Binop:String]
				[Local msg(1559718):String:String]
				+
				[Local lines(1559719):String:String]