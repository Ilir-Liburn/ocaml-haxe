[Function:(cmd : String) -> Void]
	[Arg:String] [Local cmd(505983):String]
	[Block:ocaml.lib.io.Process2]
		[Binop:ocaml.Stdlib_In_channel]
			[Field:ocaml.Stdlib_In_channel]
				[Const:ocaml.lib.io.Process] this
				[FInstance:ocaml.Stdlib_In_channel]
					ocaml.lib.io.Process
					stdin:ocaml.Stdlib_In_channel
			=
			[Call:Dynamic]
				[Field:(a0 : String) -> Dynamic]
					[TypeExpr ocaml.Unix:Class<ocaml.Unix>]
					[FStatic:(a0 : String) -> Dynamic]
						ocaml.Unix
						open_process_in:(a0 : String) -> Dynamic
				[Local cmd(505983):String:String]
		[Binop:ocaml.lib.io.Process2]
			[Field:ocaml.lib.io.Process2]
				[Const:ocaml.lib.io.Process] this
				[FInstance:ocaml.lib.io.Process2]
					ocaml.lib.io.Process
					process2:ocaml.lib.io.Process2
			=
			[New:ocaml.lib.io.Process2] ocaml.lib.io.Process2[Function:(msg : String) -> String]
	[Arg:String] [Local msg(505984):String]
	[Block:Dynamic]
		[Var lines(505985):String] [Const:String] ""
		[Var p(505986):ocaml.lib.io.Process2] [New:ocaml.lib.io.Process2] ocaml.lib.io.Process2
		[Call:Void]
			[Field:(v : Dynamic, ?infos : Null<haxe.PosInfos>) -> Void]
				[TypeExpr haxe.Log:Class<haxe.Log>]
				[FStatic:(v : Dynamic, ?infos : Null<haxe.PosInfos>) -> Void]
					haxe.Log
					trace:(v : Dynamic, ?infos : Null<haxe.PosInfos>) -> Void
			[Field:String]
				[Local p(505986):ocaml.lib.io.Process2:ocaml.lib.io.Process2]
				[FInstance:String]
					ocaml.lib.io.Process2
					name:String
			[ObjectDecl:{ methodName : String, lineNumber : Int, fileName : String, className : String }]
				fileName: [Const:String] "src/ocaml/lib/io/Process.hx"
				lineNumber: [Const:Int] 24
				className: [Const:String] "ocaml.lib.io.Process"
				methodName: [Const:String] "readAllString"
		[While:Void]
			[Const:Bool] true
			[Block:Void]
				[Try:Void]
					[Block:String]
						[Binop:String]
							[Local lines(505985):String:String]
							+=
							[Binop:String]
								[Call:String]
									[Field:(a0 : ocaml.Stdlib_In_channel) -> String]
										[TypeExpr ocaml.Stdlib:Class<ocaml.Stdlib>]
										[FStatic:(a0 : ocaml.Stdlib_In_channel) -> String]
											ocaml.Stdlib
											input_line:(a0 : ocaml.Stdlib_In_channel) -> String
									[Field:ocaml.Stdlib_In_channel]
										[Const:ocaml.lib.io.Process] this
										[FInstance:ocaml.Stdlib_In_channel]
											ocaml.lib.io.Process
											stdin:ocaml.Stdlib_In_channel
								+
								[Const:String] "\n"
					Catch [Local e(505987):haxe.Exception]
						[Block:Dynamic]
							[Return:Dynamic]
								[Binop:String]
									[Binop:String]
										[Local msg(505984):String:String]
										+
										[Local lines(505985):String:String]
									+
									[Local msg(505984):String:String]
		[Return:Dynamic]
			[Binop:String]
				[Binop:String]
					[Local msg(505984):String:String]
					+
					[Local lines(505985):String:String]
				+
				[Local msg(505984):String:String][Function:() -> ocaml.lib.io.Process2]
	[Block:Dynamic]
		[Return:Dynamic]
			[Field:ocaml.lib.io.Process2]
				[Const:ocaml.lib.io.Process] this
				[FInstance:ocaml.lib.io.Process2]
					ocaml.lib.io.Process
					process2:ocaml.lib.io.Process2